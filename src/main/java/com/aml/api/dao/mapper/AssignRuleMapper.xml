<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aml.api.dao.AssignRuleMapper">
  <resultMap id="BaseResultMap" type="com.aml.api.pojo.AssignRule">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="rule_type" jdbcType="TINYINT" property="ruleType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    
    <collection property="ruleItems" ofType="com.aml.api.pojo.AssignRuleItem">
	    <id column="r_id" jdbcType="BIGINT" property="id" />
	    <result column="r_rule_id" jdbcType="TINYINT" property="ruleId" />
	    <result column="r_start_value" jdbcType="INTEGER" property="startValue" />
	    <result column="r_end_value" jdbcType="INTEGER" property="endValue" />
	    <result column="r_threshold" jdbcType="INTEGER" property="threshold" />
	    <result column="r_create_time" jdbcType="TIMESTAMP" property="createTime" />
	    <result column="r_update_time" jdbcType="TIMESTAMP" property="updateTime" />
	    <result column="r_is_deleted" jdbcType="TINYINT" property="isDeleted" />
	</collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, rule_type, create_time, update_time, is_deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from config_assign_rule
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from config_assign_rule
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insertSelective" parameterType="com.aml.api.pojo.AssignRule">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT SCOPE_IDENTITY()
    </selectKey>
    insert into config_assign_rule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="ruleType != null">
        rule_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="ruleType != null">
        #{ruleType,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.aml.api.pojo.AssignRule">
    update config_assign_rule
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="ruleType != null">
        rule_type = #{ruleType,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aml.api.pojo.AssignRule">
    update config_assign_rule
    set role_id = #{roleId,jdbcType=BIGINT},
      rule_type = #{ruleType,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="queryAssignRuleByRoleId" resultMap="BaseResultMap">
  		SELECT
			r.id,
			r.role_id,
			r.rule_type,
			ri.id AS r_id,
			ri.start_value AS r_start_value,
			ri.end_value AS r_end_value,
			ri.threshold AS r_threshold
		FROM
			config_assign_rule r LEFT JOIN
			config_assign_rule_item ri ON r.id = ri.rule_id AND ri.is_deleted = 0
		WHERE 1 = 1
		AND r.is_deleted = 0
		AND r.role_id = #{roleId,jdbcType=BIGINT}
		ORDER BY ri.id ASC
	</select>
	
	<select id="querySamplingRule" resultMap="BaseResultMap">
  		SELECT
			r.id,
			r.role_id,
			r.rule_type,
			ri.id AS r_id,
			ri.start_value AS r_start_value,
			ri.end_value AS r_end_value,
			ri.threshold AS r_threshold
		FROM
			config_assign_rule r LEFT JOIN
			config_assign_rule_item ri ON r.id = ri.rule_id AND ri.is_deleted = 0
		WHERE 1 = 1
		AND r.is_deleted = 0
		ORDER BY ri.id ASC
	</select>
	
	<insert id="insert" keyProperty="id" useGeneratedKeys="true">
		INSERT INTO config_assign_rule (
		  role_id,
		  rule_type
		) 
		VALUES
		  (
		     #{roleId},
		     #{ruleType}
		  ) 
	</insert>
	
	<update id="update">
		UPDATE config_assign_rule
		<set>
			<if test="roleId != null and roleId != ''">
				role_id = #{roleId},
			</if>
			<if test="ruleType != null and ruleType != ''">
				rule_type = #{ruleType},
			</if>
			update_time = getdate()
		</set>
		where id = #{id}
	</update>
  
</mapper>