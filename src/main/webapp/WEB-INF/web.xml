<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">
	<display-name>AMLApi</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

	<session-config>
		<session-timeout>45</session-timeout>
	</session-config>
	<error-page>
		<error-code>404</error-code>
		<location>/error</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/error</location>
	</error-page>
	<error-page>
		<error-code>504</error-code>
		<location>/error</location>
	</error-page>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:conf/spring.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- log4j 配置 -->
	<context-param>  
	    <param-name>log4jConfigLocation</param-name>  
		<param-value>classpath:log4j.properties</param-value>  
	</context-param>  
	<context-param>  
	    <param-name>log4jRefreshInterval</param-name>  
	    <param-value>600000</param-value>  
	</context-param>  
	<context-param>  
	    <param-name>webAppRootKey</param-name>  
	    <param-value>amlApi.root</param-value>  
	</context-param>  
	<listener>  
	    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>  
	</listener>

	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 验证登陆 -->
	<filter>
		<filter-name>verifyLoginFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<!-- 登陆方式 -->
			<param-name>loginWay</param-name>
			<param-value>vendor</param-value>
		</init-param>
		<!-- 注意：所有的Url都在这里配置 -->
		<init-param>
			<!-- 不需要登陆校验的get请求Url（包括子Url），如一些不需要登陆的查询接口 ,分开-->
			<param-name>getMethodUrls</param-name>
			<param-value></param-value>
		</init-param>
		<init-param>
			<!-- 不需要登陆校验的所有请求Url（包括子Url），如一些登陆接口 ,分开-->
			<param-name>allMethodUrls</param-name>
			<param-value></param-value>
		</init-param>
		<init-param>
			<!-- 不需要权限校验的所有请求Url（包括子Url），需要登录验证的接口才会检验 ,分开-->
			<param-name>hasAccessUrls</param-name>
			<param-value></param-value>
		</init-param>
	</filter>
	
	<!-- 先关闭 -->
 	<filter-mapping>
		<filter-name>verifyLoginFilter</filter-name>
		<servlet-name>mvc-dispatcher</servlet-name>
	</filter-mapping>  
	
	<filter>
		<filter-name>security check</filter-name>
		<filter-class>com.aml.common.filter.SecurityCheckFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>security check</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 隐藏的HttpMethod方法过滤器，表单提交中需要携带一个name=_method的隐藏域，value=put或者delete -->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<servlet-name>mvc-dispatcher</servlet-name>
	</filter-mapping>

	<servlet>
		<servlet-name>mvc-dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:conf/spring-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>mvc-dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
</web-app>